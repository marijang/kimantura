/* =============================================================

    Tables v1.0
    Simple table styling by Chris Ferdinandi.
    http://gomakethings.com

    Adapted from Twitter Bootstrap.
    http://twitter.github.com/bootstrap/

    Licensed under the Apache License v2.0
    http://www.apache.org/licenses/LICENSE-2.0

 * ============================================================= */
/* =============================================================
    RESPONSIVE RESET
    Replace with your own.
 * ============================================================= */
/* =============================================================
    TABLES
    Table styling.
 * ============================================================= */
/*  Removes default browser settings
 *  and evens out inconsistencies. */
@import url("https://fonts.googleapis.com/css?family=Merriweather:300,300i,400,600,700,700i&subset=latin-ext");
@import url("https://fonts.googleapis.com/css?family=Poppins:300,300i,400,600,700,700i&subset=latin-ext");
table {
  max-width: 100%;
  border-collapse: collapse;
  border-spacing: 0; }

/*  Sets table width to 100%.
 *  Adds bottom-margin. */
.table,
table:nth-of-type(1),
table:nth-of-type(2),
table:nth-of-type(3) {
  width: 100%;
  margin-bottom: 1.52941em; }

/*  Adds table cell padding,
 *  aligns text to the left,
 *  and adds a top border to each cell. */
.table th, table:nth-of-type(1) th, table:nth-of-type(2) th, table:nth-of-type(3) th,
.table td, table:nth-of-type(1) td, table:nth-of-type(2) td, table:nth-of-type(3) td {
  padding: 0.47059em;
  text-align: left;
  border-top: 0.07143em solid #b8b8b8; }

/*  Sets table header font-weight to bold.
 *  Aligns table header text to the bottom of each cell. */
.table th, table:nth-of-type(1) th, table:nth-of-type(2) th, table:nth-of-type(3) th {
  font-weight: bold;
  vertical-align: bottom; }

/*  Aligns cell text to the top of each cell. */
.table td, table:nth-of-type(1) td, table:nth-of-type(2) td, table:nth-of-type(3) td {
  vertical-align: top; }

/*  Removes the border-top from the first row. */
.table thead:first-child tr th, table:nth-of-type(1) thead:first-child tr th, table:nth-of-type(2) thead:first-child tr th, table:nth-of-type(3) thead:first-child tr th,
.table thead:first-child tr td, table:nth-of-type(1) thead:first-child tr td, table:nth-of-type(2) thead:first-child tr td, table:nth-of-type(3) thead:first-child tr td {
  border-top: 0; }

/*  Adds border-top between two table-body sections. */
.table tbody + tbody, table:nth-of-type(1) tbody + tbody, table:nth-of-type(2) tbody + tbody, table:nth-of-type(3) tbody + tbody {
  border-top: 0.14286em solid #b8b8b8; }

/*  Reduces cell padding */
.table-condensed th, table:nth-of-type(2) th,
.table-condensed td, table:nth-of-type(2) td {
  padding: 0.29412em; }

/* Adds borders and border-radius. */
.table-bordered,
table:nth-of-type(3) {
  border: 0.07143em solid #b8b8b8;
  border-collapse: separate;
  *border-collapse: collapsed;
  border-radius: 0.47059em; }

.table-bordered th + th, table:nth-of-type(3) th + th,
.table-bordered td + td, table:nth-of-type(3) td + td,
.table-bordered th + td, table:nth-of-type(3) th + td,
.table-bordered td + th, table:nth-of-type(3) td + th {
  border-left: 0.07143em solid #b8b8b8; }

.table-bordered thead:first-child tr:first-child th, table:nth-of-type(3) thead:first-child tr:first-child th,
.table-bordered tbody:first-child tr:first-child th, table:nth-of-type(3) tbody:first-child tr:first-child th,
.table-bordered tbody:first-child tr:first-child td, table:nth-of-type(3) tbody:first-child tr:first-child td {
  border-top: 0; }

.table-bordered thead:first-child tr:first-child th:first-child, table:nth-of-type(3) thead:first-child tr:first-child th:first-child,
.table-bordered tbody:first-child tr:first-child td:first-child, table:nth-of-type(3) tbody:first-child tr:first-child td:first-child {
  border-radius: 0.47059em 0 0 0; }

.table-bordered thead:first-child tr:first-child th:last-child, table:nth-of-type(3) thead:first-child tr:first-child th:last-child,
.table-bordered tbody:first-child tr:first-child td:last-child, table:nth-of-type(3) tbody:first-child tr:first-child td:last-child {
  border-radius: 0 0.47059em 0 0; }

.table-bordered thead:last-child tr:last-child th:first-child, table:nth-of-type(3) thead:last-child tr:last-child th:first-child,
.table-bordered tbody:last-child tr:last-child td:first-child, table:nth-of-type(3) tbody:last-child tr:last-child td:first-child {
  border-radius: 0 0 0 0.47059em; }

.table-bordered thead:last-child tr:last-child th:last-child, table:nth-of-type(3) thead:last-child tr:last-child th:last-child,
.table-bordered tbody:last-child tr:last-child td:last-child, table:nth-of-type(3) tbody:last-child tr:last-child td:last-child {
  border-radius: 0 0 0.47059em 0; }

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@keyframes keyframe-move-down {
  0% {
    transform: translate(0, 0); }
  100% {
    transform: translate(0, 100%); } }

/* ----------------------------------------------
 * Generated by Animista on 2018-4-5 10:25:30
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */
.kenburns-top {
  animation: kenburns-top 5s ease-out both; }

.kenburns-bottom {
  animation: kenburns-bottom 5s ease-out both; }

.shadow-drop-2-tb {
  animation: shadow-drop-2-tb 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both; }

/**
 * ----------------------------------------
 * animation kenburns-top
 * ----------------------------------------
 */

@keyframes kenburns-top {
  0% {
    transform: scale(1) translateY(0);
    transform-origin: 50% 16%; }
  100% {
    transform: scale(1.25) translateY(-15px);
    transform-origin: top; } }

/**
 * ----------------------------------------
 * animation kenburns-bottom
 * ----------------------------------------
 */

@keyframes kenburns-bottom {
  0% {
    transform: scale(1) translateY(0);
    transform-origin: 50% 84%; }
  100% {
    transform: scale(1.25) translateY(15px);
    transform-origin: bottom; } }

@keyframes shadow-drop-2-tb {
  0% {
    transform: translateZ(0);
    box-shadow: 0 0 0 0 transparent, 0 0 0 0 transparent; }
  100% {
    transform: translateZ(50px);
    box-shadow: 0 -12px 20px -12px rgba(0, 0, 0, 0.35), 0 12px 20px -12px rgba(0, 0, 0, 0.35); } }

/* Powered by: https://github.com/tonystar/float-label-css
 */
/* Re-usable mixins
 * https://github.com/tonystar/float-label-css/blob/master/scss/_mixins.scss
 */
/* Default styling
   * https://github.com/tonystar/float-label-css/blob/master/scss/float-label.scss
   */
.has-float-label {
  display: block;
  position: relative; }
  .has-float-label label {
    position: absolute;
    left: 0;
    top: 0;
    cursor: text;
    font-size: 75%;
    opacity: 1;
    transition: all .2s; }
  .has-float-label select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none; }
  .has-float-label input, .has-float-label select {
    font-size: inherit;
    padding-top: 1em;
    margin-bottom: 2px;
    border: 0;
    border-radius: 0;
    border-bottom: 2px solid rgba(0, 0, 0, 0.1); }
    .has-float-label input::-webkit-input-placeholder, .has-float-label select::-webkit-input-placeholder {
      opacity: 1;
      transition: all .2s; }
    .has-float-label input:-ms-input-placeholder, .has-float-label select:-ms-input-placeholder {
      opacity: 1;
      transition: all .2s; }
    .has-float-label input::placeholder, .has-float-label select::placeholder {
      opacity: 1;
      transition: all .2s; }
    .has-float-label input:placeholder-shown:not(:focus)::-webkit-input-placeholder, .has-float-label select:placeholder-shown:not(:focus)::-webkit-input-placeholder {
      opacity: 0; }
    .has-float-label input:placeholder-shown:not(:focus):-ms-input-placeholder, .has-float-label select:placeholder-shown:not(:focus):-ms-input-placeholder {
      opacity: 0; }
    .has-float-label input:placeholder-shown:not(:focus)::placeholder, .has-float-label select:placeholder-shown:not(:focus)::placeholder {
      opacity: 0; }
    .has-float-label input:placeholder-shown:not(:focus) + *, .has-float-label select:placeholder-shown:not(:focus) + * {
      font-size: 100%;
      opacity: .5;
      top: .25em; }
    .has-float-label input:focus, .has-float-label select:focus {
      outline: none;
      border-color: rgba(0, 0, 0, 0.5); }
  .has-float-label select {
    padding-right: 1em;
    background: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23333' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E") no-repeat right 0.5em bottom 0.25em;
    background-size: 8px 10px; }

::-moz-selection {
  color: #fff;
  text-shadow: none;
  background: #d33a2c; }

::selection {
  color: #fff;
  text-shadow: none;
  background: #d33a2c; }

/*
@mixin button($bg-color, $font-color) {
  background: $bg-color;
  color: $font-color;
  border-color: $font-color;

  &:focus {
    border-color: $font-color;
    background: $bg-color;
    color: $font-color;
  }

  &:hover {
    color: $font-color;
    background: lighten($bg-color, 20%);
  }

  &:active {
    background: lighten($bg-color, 30%);
    top: 2px;
  }
*/
.base {
  font-size: 112.5%;
  line-height: 1.4; }

.h1 {
  font-size: 2.77778rem; }

.h2 {
  font-size: 1.22222rem; }

.p {
  font-size: 1rem; }

.label {
  font-size: 1rem;
  line-height: 38px; }

.xxl {
  font-size: 2rem;
  line-height: 44px; }

.large {
  font-size: 1.66667rem;
  line-height: 44px; }

.small {
  font-size: 0.88889rem;
  line-height: 23px; }

.xs {
  font-size: 0.77778rem; }

html {
  font-size: 112.5%;
  line-height: 1.4; }

html {
  font-family: "Poppins", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  letter-spacing: 0.5px;
  -webkit-font-smoothing: antialiased; }

h1, h2, h3, h4, h5, h6 {
  font-family: "Poppins", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  -webkit-font-kerning: normal;
          font-kerning: normal;
  font-weight: 700; }

h1 {
  font-size: 2.77778rem;
  margin-top: 1.4rem;
  margin-bottom: 1.4rem; }

p {
  font-size: 1rem;
  margin-top: 0px;
  font-family: "Merriweather", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  margin-bottom: 1.4rem;
  letter-spacing: 0.5px;
  -webkit-font-smoothing: antialiased; }

input, button, button:focus, a, img {
  outline: 0; }

:focus {
  outline: none; }

a {
  color: #3DC19E;
  text-decoration: none; }
  a:hover {
    color: #25735f; }

.article {
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .article {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .article {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .article {
      max-width: 1280px; } }
  .article--primary {
    background: #F9FAFB; }
  .article__description {
    font-weight: 300;
    margin-bottom: 2.8rem; }
  .article__content-wrap {
    display: -ms-flexbox;
    display: flex; }
    .article__content-wrap--columns .article__image {
      -ms-flex: 1;
          flex: 1; }
    .article__content-wrap--columns .article__content {
      -ms-flex: 1;
          flex: 1;
      margin-right: 32px; }
  .article__title {
    margin-bottom: 32px; }
    .article__title--center {
      text-align: center; }
  .article__image {
    margin-bottom: 64px;
    position: relative;
    overflow: hidden; }
    .article__image img {
      width: 100%; }

/* General button style (reset) */
.btn {
  border: none;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  background: none;
  cursor: pointer;
  padding: 16px 32px;
  display: block;
  font-weight: 700;
  outline: none;
  position: relative;
  transition: all 0.3s;
  color: #fff; }

.btn--cta {
  color: #fff; }

.btn:after {
  content: '';
  position: absolute;
  z-index: -1;
  transition: all 0.3s; }

/* Pseudo elements for icons */
.btn:before,
.icon-heart:after,
.icon-star:after,
.icon-plus:after,
.icon-file:before {
  font-family: 'icomoon';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  position: relative;
  -webkit-font-smoothing: antialiased; }

/* Button 1 */
.btn--primary {
  border: 3px solid #3DC19E;
  color: #fff; }

/* Button 1c */
.btn--primary:after {
  width: 0%;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: #3DC19E; }

.btn--primary:hover,
.btn--primary:active {
  color: #3DC19E;
  color: #3DC19E; }

.btn--primary:hover:after,
.btn--primary:active:after {
  width: 100%;
  width: 0%; }

.btn--small {
  height: 48px;
  padding: 0 32px;
  font-size: 0.88889rem;
  line-height: 23px;
  margin: 0px; }
  .btn--small .svg-inline--fa {
    margin-right: 8px; }

a.bttn {
  color: #3DC19E;
  text-decoration: none;
  transition: 0.3s ease all; }
  a.bttn:hover {
    color: #FFF; }
  a.bttn:focus {
    color: #FFF; }

a.bttn-dark {
  color: #fff;
  text-decoration: none;
  transition: 0.3s ease all; }
  a.bttn-dark:hover {
    color: #FFF; }
  a.bttn-dark:focus {
    color: #FFF; }

.bttn {
  font-size: 18px;
  letter-spacing: 2px;
  text-transform: uppercase;
  display: inline-block;
  text-align: center;
  width: 270px;
  font-weight: bold;
  padding: 14px 0px;
  border: 3px solid #3DC19E;
  border-radius: 2px;
  position: relative;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.1); }
  .bttn:before {
    transition: 0.5s all ease;
    position: absolute;
    top: 0;
    left: 50%;
    right: 50%;
    bottom: 0;
    opacity: 0;
    content: '';
    background-color: #3DC19E;
    z-index: -2; }
  .bttn:hover:before {
    transition: 0.5s all ease;
    left: 0;
    right: 0;
    opacity: 1; }
  .bttn:focus:before {
    transition: 0.5s all ease;
    left: 0;
    right: 0;
    opacity: 1; }

.bttn-dark {
  font-size: 18px;
  letter-spacing: 2px;
  text-transform: uppercase;
  display: inline-block;
  text-align: center;
  width: 270px;
  font-weight: bold;
  padding: 14px 0px;
  border: 3px solid red;
  border-radius: 2px;
  position: relative;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.1);
  z-index: 2; }
  .bttn-dark:before {
    transition: 0.5s all ease;
    position: absolute;
    top: 0;
    left: 50%;
    right: 50%;
    bottom: 0;
    opacity: 0;
    content: '';
    background-color: red;
    z-index: -1; }
  .bttn-dark:hover:before {
    transition: 0.5s all ease;
    left: 0;
    right: 0;
    opacity: 1; }
  .bttn-dark:focus:before {
    transition: 0.5s all ease;
    left: 0;
    right: 0;
    opacity: 1; }

.btn1 {
  color: #3DC19E;
  border: 1px solid #3DC19E;
  padding: 20px 0px;
  text-transform: uppercase;
  letter-spacing: 0px;
  position: relative;
  overflow: hidden;
  cursor: pointer; }
  .btn1 span {
    display: block;
    text-align: center;
    position: relative;
    z-index: 100; }
  .btn1:before, .btn1:after {
    content: '';
    position: absolute;
    display: block;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0; }
  .btn1:before {
    transform: translate3d(-100%, 0, 0);
    background-color: white;
    border: 1px solid white;
    transition: transform 300ms cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .btn1:after {
    background-color: #3DC19E;
    border: 1px solid #3DC19E;
    transform: translate3d(100%, 0, 0);
    transition: transform 300ms 300ms cubic-bezier(0.16, 0.73, 0.58, 0.62); }
  .btn1:hover {
    color: #fff; }
    .btn1:hover:before {
      transform: translate3d(0, 0, 0); }
    .btn1:hover:after {
      transform: translate3d(0, 0, 0); }

.featured-link {
  position: relative;
  display: block;
  box-sizing: border-box;
  margin: auto;
  margin: 0px;
  text-align: center;
  padding: 32px;
  color: #262626; }
  .featured-link:hover {
    text-decoration: none;
    color: #262626; }
    .featured-link:hover::after {
      opacity: 1; }
    .featured-link:hover .featured-link__movable {
      -ms-transform: translateY(-10px);
          transform: translateY(-10px); }
    .featured-link:hover .featured-link__button {
      opacity: 1; }
  .featured-link__title {
    font-weight: 400;
    text-align: left;
    color: #262626;
    margin-bottom: 16px; }
  .featured-link__price {
    display: block;
    margin-bottom: 16px;
    color: #262626; }
  .featured-link__movable {
    position: relative;
    transition: transform 300ms;
    text-align: left; }
    .featured-link__movable:hover > .featured-link__movable {
      -ms-transform: translateY(-10px);
          transform: translateY(-10px); }
  .featured-link__button {
    display: inline-block;
    padding: 0;
    height: 32px;
    border: 1px solid rgba(0, 0, 0, 0.2);
    position: relative;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    transition: all 300ms;
    cursor: pointer;
    transition: opacity 300ms;
    opacity: 0;
    color: #25735f;
    border-color: transparent; }
  .featured-link__image {
    height: 240px;
    padding-bottom: 16px;
    display: inline-block; }
  .featured-link::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: '';
    transition: opacity 200ms;
    opacity: 0;
    border: 1px solid #E9E9E9;
    border-color: 200ms;
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2); }

.featured-item:hover .movable {
  -ms-transform: translateY(-10px);
      transform: translateY(-10px); }

.featured-item__movable {
  position: relative;
  transition: transform 300ms; }

.featured-item::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  content: '';
  transition: opacity 200ms;
  opacity: 0;
  border: 1px solid #E9E9E9;
  border-color: 200ms;
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2); }

.featured-item:hover::after {
  opacity: 1; }

footer {
  background: #3A4542;
  font-size: 85%;
  font-weight: 400; }

.footer__content {
  display: -ms-grid;
  display: grid;
  grid-auto-flow: column dense;
  -ms-grid-columns: (10fr 1fr 1fr)[2];
      grid-template-columns: repeat(2, 10fr 1fr 1fr);
  -ms-grid-columns: 2fr 1fr 1fr;
      grid-template-columns: 2fr 1fr 1fr;
  grid-gap: 32px;
  padding: 48px 0;
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .footer__content {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .footer__content {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .footer__content {
      max-width: 1280px; } }
  .footer__content p {
    margin-bottom: 0;
    margin-top: 16px;
    color: #fff; }
  .footer__content p, .footer__content a {
    font-size: 100%; }

.footer-nav {
  font-size: 100%;
  list-style: none;
  padding: 0;
  margin: 0; }
  .footer-nav__item {
    margin-bottom: 8px; }
  .footer-nav__link {
    color: #fff; }

.footer__links {
  padding-left: 48px; }

.footer__logo {
  margin: 0px; }
  .footer__logo img {
    width: 20%; }

.footer__info {
  background: rgba(0, 0, 0, 0.25);
  padding: 16px;
  color: #fff; }
  .footer__info small {
    max-width: 1280px;
    margin: 0 auto;
    display: block; }
    @media (min-width: 768px) {
      .footer__info small {
        max-width: 720px; } }
    @media (min-width: 992px) {
      .footer__info small {
        max-width: 960px; } }
    @media (min-width: 1200px) {
      .footer__info small {
        max-width: 1280px; } }

:checked + label::before {
  background-color: #3DC19E; }

:checked + label::after {
  display: block;
  position: absolute;
  top: 0.2rem;
  left: 0.375rem;
  width: 0.25rem;
  height: 0.5rem;
  border: solid white;
  border-width: 0 2px 2px 0;
  -ms-transform: rotate(45deg);
      transform: rotate(45deg);
  content: ''; }

input[type="text"] {
  font-size: 18px;
  /* font-size is up to you, not required */
  padding: 10px;
  /* padding is up to you */
  display: block;
  /* just to make sure display is block */
  width: 100%;
  /* width is up to you */ }

label {
  font-size: 18px;
  /* up to you, I matched the <input> style */
  font-weight: normal;
  /* up to you, not required */
  left: 10px;
  /* determines space to left of label */
  top: 13px;
  /* determines space above label */
  pointer-events: none;
  /* enables click through on label */
  transition: 0.2s ease all;
  /* determines animation during */
  -moz-transition: 0.2s ease all;
  /* user interaction */
  -webkit-transition: 0.2s ease all; }

input:focus ~ label, input:valid ~ label {
  top: -20px;
  /* where the label goes upon interaction */
  font-size: 14px;
  /* font-size change on interaction */ }

.input__number-wrapper {
  border: 1px solid #BDBDBD;
  display: -ms-flexbox;
  display: flex;
  height: 48px;
  overflow: hidden; }

.input__number {
  width: 40px;
  padding: 0 8px;
  vertical-align: middle;
  text-align: center;
  outline: none;
  border: none;
  display: block;
  line-height: 48px;
  -ms-flex: 1;
      flex: 1; }

.input__number,
.input__number-decrement,
.input__number-increment {
  height: 48px;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

.input__number-decrement,
.input__number-increment {
  display: block;
  -ms-flex: 1;
      flex: 1;
  width: 24px;
  height: 48px;
  line-height: 48px;
  margin-left: 8px;
  margin-right: 8px;
  color: #828282;
  text-align: center;
  font-weight: bold;
  cursor: pointer; }

.input__number-decrement:active,
.input__number-increment:active {
  background: #ddd; }

.input__number-decrement {
  border-right: none; }

.input__number-increment {
  border-left: none; }

.navigation {
  -ms-grid-row: 1;
      grid-row: 1;
  grid-column: 1 / 13;
  text-align: left;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[12];
      grid-template-columns: repeat(12, 1fr); }

.navigation__brand {
  grid-column: 1 / 4; }
  .navigation__brand img {
    height: 70px;
    width: 128px; }

.navigation__primary {
  grid-column: 4 / 10;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }

.navigation__secondary {
  grid-column: 10 / 13;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }

.navigation__list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center; }

.navigation__list--main {
  -ms-flex: 1;
      flex: 1; }

.navigation__item {
  position: relative;
  padding: 16px; }

.navigation__link {
  color: #333;
  text-decoration: none;
  position: relative;
  font-weight: bold;
  letter-spacing: 0.4px; }
  .navigation__link.is-active, .navigation__link.current {
    color: #3DC19E; }
  .navigation__link:hover {
    color: #3DC19E; }
    .navigation__link:hover:before {
      -ms-transform: scale(1, 1);
          transform: scale(1, 1); }
  .navigation__link:before {
    content: "";
    position: absolute;
    left: -16px;
    top: 11px;
    width: 12px;
    background: currentColor;
    height: 2px;
    -ms-transform-origin: left;
        transform-origin: left;
    transition: all .2s ease-out;
    -ms-transform: scale(0, 1);
        transform: scale(0, 1); }

.single-post .page__content p {
  margin-left: 288px; }

.page__header {
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .page__header {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .page__header {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .page__header {
      max-width: 1280px; } }

.page__article {
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .page__article {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .page__article {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .page__article {
      max-width: 1280px; } }

.page__article {
  margin-bottom: 64px; }

.page__title {
  margin-bottom: 0; }

.page__description {
  font-weight: 300;
  margin-bottom: 2.8rem; }

.page__title-main {
  display: block; }

.page__title-subtitle {
  display: block;
  font-size: 1rem;
  margin-top: 0px;
  margin-bottom: 1.4rem;
  font-weight: 300; }

.page__image {
  margin-bottom: 64px;
  position: relative;
  overflow: hidden; }
  .page__image img {
    width: 100%; }

.post__item {
  display: -ms-flexbox;
  display: flex;
  position: relative;
  margin-bottom: 64px; }

.post__title a {
  color: #424242; }

.post__info {
  -ms-flex: 1;
      flex: 1;
  background: #fff;
  padding: 2.8rem;
  margin-top: 4.2rem;
  box-shadow: 0 4px 18.9px 2.1px rgba(205, 193, 193, 0.15); }

.post__image {
  margin-bottom: 64px;
  -ms-flex: 1;
      flex: 1; }
  .post__image img {
    width: 100%;
    vertical-align: middle; }

.section {
  padding: 64px 0;
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .section {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .section {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .section {
      max-width: 1280px; } }
  .section--primary {
    background: #F9FAFB; }
  .section--fluid {
    max-width: 100%;
    margin-left: 0px;
    margin-right: 0px; }
  .section__title--center {
    text-align: center; }

.social-icons__wrapper a {
  width: 32px;
  height: 32px;
  line-height: 32px;
  border: 1px solid #d9d9d9;
  border-radius: 16px;
  color: #68686d;
  text-align: center;
  margin-right: 5px;
  margin-left: 5px;
  margin-bottom: 5px;
  display: inline-block; }

.boxes {
  display: -ms-flexbox;
  display: flex;
  margin-top: 64px; }
  .boxes h4 {
    margin-top: 0px; }
  .boxes p {
    font-weight: 300; }
  .boxes__item {
    -ms-flex: 1;
        flex: 1;
    position: relative;
    margin-left: 64px; }
    .boxes__item:first-child {
      margin-left: 0px; }
  .boxes__number {
    position: absolute;
    height: 146px;
    top: -56px;
    left: -40px;
    letter-spacing: 5px;
    font-weight: 500;
    opacity: 0.4; }

.contentgrid {
  -ms-grid-row: 1;
      grid-row: 1;
  grid-column: 2 / 11;
  text-align: left;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[12];
      grid-template-columns: repeat(12, 1fr);
  margin-bottom: 64px; }
  .contentgrid p, .contentgrid div:first-child {
    grid-column: 2 / 12; }

.image-boxes {
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 64px; }
  .image-boxes__item:nth-child(1) {
    width: calc(100% / 3 * 2);
    margin-right: 32px; }
  .image-boxes__item:nth-child(2) {
    width: calc(100% / 3 * 1); }
  .image-boxes img {
    width: 100%;
    height: 450px; }

.litetext {
  font-weight: 300; }

.woocommerce-MyAccount-navigation {
  list-style: none;
  -ms-flex: 1;
      flex: 1; }
  .woocommerce-MyAccount-navigation ul {
    list-style: none;
    padding: 0px;
    margin: 0px; }

.woocommerce-MyAccount-navigation-link {
  padding-bottom: 16px; }
  .woocommerce-MyAccount-navigation-link a {
    color: #333; }
    .woocommerce-MyAccount-navigation-link a:hover {
      color: #3DC19E; }
  .woocommerce-MyAccount-navigation-link.is-active a {
    color: #3DC19E; }

.woocommerce-MyAccount-content {
  -ms-flex: 3;
      flex: 3;
  display: -ms-flexbox;
  display: flex; }

.best-selling-products {
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .best-selling-products {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .best-selling-products {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .best-selling-products {
      max-width: 1280px; } }
  .best-selling-products__content {
    margin-bottom: 64px;
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[3];
        grid-template-columns: repeat(3, 1fr);
    grid-gap: 16px; }

.woocommerce-message {
  -ms-flex-direction: column;
      flex-direction: column;
  width: 100%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }

/* WooCommerce 3.0 Gallery */
.woocommerce-product-gallery {
  position: relative;
  margin-bottom: 3em; }

.woocommerce-product-gallery figure {
  margin: 0; }

.woocommerce-product-gallery .woocommerce-product-gallery__image:nth-child(n+2) {
  width: 25%;
  display: inline-block; }

.woocommerce-product-gallery .flex-control-thumbs li {
  list-style: none;
  float: left;
  cursor: pointer; }

.woocommerce-product-gallery .flex-control-thumbs img {
  opacity: .5; }

.woocommerce-product-gallery .flex-control-thumbs img.flex-active, .woocommerce-product-gallery .flex-control-thumbs img:hover {
  opacity: 1; }

.woocommerce-product-gallery img {
  display: block; }

.woocommerce-product-gallery--columns-3 .flex-control-thumbs li {
  width: 33.3333%; }

.woocommerce-product-gallery--columns-4 .flex-control-thumbs li {
  width: 25%; }

.woocommerce-product-gallery--columns-5 .flex-control-thumbs li {
  width: 20%; }

.woocommerce-product-gallery__trigger {
  position: absolute;
  top: 1em;
  right: 1em;
  z-index: 99; }

a.woocommerce-product-gallery__trigger {
  text-decoration: none; }

.single-product div.product .woocommerce-product-gallery .woocommerce-product-gallery__trigger {
  position: absolute;
  top: .875em;
  right: .875em;
  display: block;
  height: 2em;
  width: 2em;
  border-radius: 3px;
  z-index: 99;
  text-align: center;
  text-indent: -999px;
  overflow: hidden; }

.single-product div.product .woocommerce-product-gallery .woocommerce-product-gallery__trigger {
  background-color: #169fda;
  color: #ffffff; }

.single-product div.product .woocommerce-product-gallery .woocommerce-product-gallery__trigger:hover {
  background-color: #1781ae;
  border-color: #1781ae;
  color: #ffffff; }

.single-product div.product .woocommerce-product-gallery .woocommerce-product-gallery__trigger:before {
  font: normal normal normal 1em/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: block;
  content: "\f00e";
  line-height: 2;
  text-indent: 0; }

.wc-tabs {
  display: none; }

.woof_list_checkbox, .product-categories {
  background-color: #fff;
  border: 1px solid #E0E0E0;
  margin: 0 0 1.5em 0;
  padding: 0; }
  .woof_list_checkbox ul, .product-categories ul {
    margin: 0;
    padding: 0; }
  .woof_list_checkbox li, .product-categories li {
    border-bottom: 1px solid #E0E0E0;
    list-style: none;
    margin: 0px !important; }
    .woof_list_checkbox li input, .product-categories li input {
      margin-left: 16px; }
    .woof_list_checkbox li > a, .product-categories li > a, .woof_list_checkbox li > label, .product-categories li > label {
      color: #333;
      display: block;
      padding: 16px;
      text-decoration: none;
      text-transform: uppercase;
      font-size: 0.88889rem;
      line-height: 23px; }
    .woof_list_checkbox li:last-child, .product-categories li:last-child {
      border: 0; }
    .woof_list_checkbox li:focus, .product-categories li:focus, .woof_list_checkbox li:hover, .product-categories li:hover {
      background-color: white; }
  .woof_list_checkbox ul, .product-categories ul {
    display: none; }
    .woof_list_checkbox ul li, .product-categories ul li {
      border: none;
      padding: 8px; }
      .woof_list_checkbox ul li:focus, .product-categories ul li:focus, .woof_list_checkbox ul li:hover, .product-categories ul li:hover {
        background-color: #f2f2f2; }
  .woof_list_checkbox .is-expanded, .product-categories .is-expanded {
    display: block;
    padding-bottom: 0; }
    .woof_list_checkbox .is-expanded > a, .product-categories .is-expanded > a {
      font-weight: 700; }

.woof_is_opened {
  font-family: "Font Awesome 5 Solid";
  content: "\f077";
  background: url(img/stre-down.png) !important; }

.woof_is_closed {
  font-family: "Font Awesome 5 Solid";
  content: "\f077";
  background: url(img/stre-up.png) !important; }

.woof_childs_list_opener {
  float: right; }

.woof_childs_list {
  margin: 0px !important;
  padding: 0px !important; }

.woof_childs_list_li > input {
  display: none; }

.woof_childs_list_li > label {
  font-weight: 700; }
  .woof_childs_list_li > label .woof_checkbox_count {
    display: none !important; }

.product-categories1 {
  padding: 0;
  margin: 0;
  list-style: none; }
  .product-categories1 li {
    border-top: 1px solid black;
    border-left: 1px solid black;
    border-right: 1px solid black;
    border-bottom: 0; }
    .product-categories1 li a {
      display: block;
      color: black;
      font-weight: bold;
      padding: 16px; }
  .product-categories1 ul {
    border-top: 0;
    font-size: 12px;
    list-style: none;
    margin: 0px;
    padding: 10px;
    border-top: 1px solid black; }
    .product-categories1 ul li {
      border: 0; }
      .product-categories1 ul li a {
        padding: none; }

/*

var allPanels = $('.product-categories > ul').hide();
 
$('.product-categories > ul > a').click(function() {
 $(this).parent().next().slideToggle();
 return false; 
});
*/
.up-sells.products1, .related.products1 {
  display: -ms-flexbox;
  display: flex; }

.product1 {
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .product1 .summary {
    -ms-flex: 1;
        flex: 1; }

.woocommerce-product-gallery {
  -ms-flex: 1;
      flex: 1; }

.woocommerce-LoopProduct-link {
  color: #333;
  position: relative;
  display: block;
  overflow: hidden; }
  .woocommerce-LoopProduct-link .onsale {
    position: absolute;
    top: 0px;
    right: 0px;
    height: 64px;
    color: #fff;
    padding: 16px;
    font-size: 0.88889rem;
    line-height: 23px; }
    .woocommerce-LoopProduct-link .onsale::after {
      display: block;
      position: absolute;
      background: #3DC19E;
      content: '';
      width: 190px;
      height: 150px;
      -ms-transform: translate(50%, -70%) rotate(45deg);
      transform: rotate(45deg);
      /* padding: 48px; */
      z-index: -1;
      position: absolute;
      left: -28px;
      top: -77px; }
  .woocommerce-LoopProduct-link:hover {
    color: #3DC19E; }
  .woocommerce-LoopProduct-link .price {
    margin: 0;
    padding-bottom: 16px;
    display: block; }

.woocommerce-loop-product__title {
  margin-bottom: 0; }

.products-wrapper {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (minmax(200px, 1fr))[auto-fit];
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); }

ul.products {
  list-style: none;
  margin: 0px;
  padding: 0px;
  padding: 0px;
  margin: 0px;
  list-style: none;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (minmax(250px, 1fr))[auto-fill];
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  -ms-grid-columns: 1fr 1fr 1fr;
      grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 16px; }

.products__most-selling {
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .products__most-selling {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .products__most-selling {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .products__most-selling {
      max-width: 1280px; } }

.products__title--center {
  text-align: center; }

.products__slider-wrapper {
  padding: 16px;
  position: relative; }

.woocommerce-ordering {
  -ms-flex: 1;
      flex: 1;
  text-align: right; }

.woocommerce-result-count {
  -ms-flex: 1;
      flex: 1;
  font-size: 0.77778rem; }

.shop {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[12];
      grid-template-columns: repeat(12, 1fr);
  grid-gap: 32px;
  margin-bottom: 64px; }
  .shop__sidebar {
    grid-column: 1/4; }
    .shop__sidebar h4 {
      margin-top: 0px; }
  .shop__products {
    grid-column: 4/13;
    display: -ms-flexbox;
    display: flex;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
  .shop__products-list {
    -ms-flex: 1;
        flex: 1; }
  .shop .products11 {
    padding: 0px;
    margin: 0px;
    list-style: none;
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (minmax(250px, 1fr))[auto-fill];
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    -ms-grid-columns: 1fr 1fr 1fr;
        grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 16px; }

.single-product__item {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  position: relative;
  margin-top: 104px;
  overflow: hidden; }

.single-product__summary {
  -ms-flex: 1;
      flex: 1; }

.single-product__title {
  font-family: "Poppins", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 2rem;
  line-height: 44px;
  font-weight: 400;
  margin-bottom: 16px;
  margin-top: 0px; }

.single-product__price {
  display: block;
  font-weight: 700;
  font-family: "Poppins", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 1.66667rem;
  line-height: 44px;
  color: #3DC19E;
  margin-bottom: 16px; }

.single-product__variation-item label {
  font-size: 1rem;
  line-height: 38px;
  display: block;
  margin-top: 0px;
  font-weight: 600; }

.single-product__onsale {
  display: block;
  position: absolute;
  top: -16px;
  left: 412px;
  padding: 16px;
  position: absolute;
  height: 64px;
  color: #fff;
  padding: 16px;
  font-size: 0.88889rem;
  line-height: 23px; }
  .single-product__onsale::after {
    display: block;
    position: absolute;
    background: #3DC19E;
    content: '';
    width: 190px;
    height: 150px;
    -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    /* padding: 48px; */
    z-index: -1;
    position: absolute;
    left: -28px;
    top: -77px; }

.single-product__meta {
  display: block;
  margin-top: 32px; }

.single-product__sku {
  display: block;
  margin-bottom: 8px;
  font-size: 0.88889rem;
  line-height: 23px; }

.single-product__posted-in {
  display: none;
  font-size: 0.77778rem; }

.single-product__tagged-as {
  display: block;
  font-size: 0.88889rem;
  line-height: 23px; }

.single-product__tab-wrapper {
  -ms-grid-row: 1;
  grid-row: 1;
  grid-column: 2 / 11;
  text-align: left;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[12];
      grid-template-columns: repeat(12, 1fr);
  margin-bottom: 64px;
  margin-top: 84px; }

.single-product__tab {
  grid-column: 2 / 11; }

.single-product__cart {
  display: -ms-flexbox;
  display: flex; }

.single-product__quantity {
  margin-right: 16px; }

.single-product__description {
  margin-bottom: 1.4rem;
  font-size: 0.88889rem;
  line-height: 23px; }

.single-product__variations-button {
  display: -ms-flexbox;
  display: flex;
  margin-top: 16px; }

.single-product__variation-availability {
  display: none; }

.single-product__upsells {
  margin-bottom: 64px; }

.single-product__related {
  margin-bottom: 64px; }

.woocommerce__main {
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .woocommerce__main {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .woocommerce__main {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .woocommerce__main {
      max-width: 1280px; } }

.woocommerce__blog {
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .woocommerce__blog {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .woocommerce__blog {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .woocommerce__blog {
      max-width: 1280px; } }

/*--------------------------------------------------------------
# Accessibility
--------------------------------------------------------------*/
/* Text meant only for screen readers. */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
  /* Many screen reader and browser combinations announce broken words as they would appear visually. */ }

.screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  -webkit-clip-path: none;
          clip-path: none;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-size: 0.875rem;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar. */ }

/* Do not show the outline on the skip link target. */
#content[tabindex="-1"]:focus {
  outline: 0; }

* {
  box-sizing: border-box; }

html {
  font-family: "Poppins", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  box-sizing: border-box;
  color: #333; }

.grid1 {
  background-image: linear-gradient(to bottom, rgba(0, 170, 255, 0.3) 1px, transparent 1px);
  background-image: linear-gradient(rgba(0, 170, 255, 0.3) 1px, transparent 1px);
  background-size: auto 1.4em;
  background-position: left top;
  background-repeat: repeat;
  background-size: 100% 1.4rem; }
  @media (min-width: 1200px) {
    .grid1 {
      background-size: 115% 1.4rem; } }

.page-header1 {
  -ms-grid-row: 1;
      grid-row: 1;
  grid-column: 1 / 13;
  text-align: left;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[12];
      grid-template-columns: repeat(12, 1fr); }

.container {
  -ms-flex-line-pack: center;
      align-content: center;
  width: 100%;
  max-width: 1280px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .container {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .container {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .container {
      max-width: 1280px; } }

body::before {
  background: url("img/cipka.png");
  background-repeat: no-repeat;
  background-position: 0px 442px;
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  opacity: .5;
  z-index: -1;
  height: 1876px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
